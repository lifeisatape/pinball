–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ "FarcasterManager not available"
–®–∞–≥ 1: –ò—Å–ø—Ä–∞–≤—å—Ç–µ core/FarcasterManager.js
–í –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞ —É–¥–∞–ª–∏—Ç–µ –∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:
javascript// –£–î–ê–õ–ò–¢–ï —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏:
// try {
//     console.log('Creating global FarcasterManager instance...');
//     window.farcasterManager = new FarcasterManager();
//     console.log('‚úÖ Global FarcasterManager instance created successfully');
// } catch (error) {
//     console.error('‚ùå Failed to create global FarcasterManager instance:', error);
// }

// –î–û–ë–ê–í–¨–¢–ï –≤–º–µ—Å—Ç–æ –Ω–∏—Ö:
console.log('‚úÖ FarcasterManager class ready for initialization');
–î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:
javascriptasync reinitialize() {
    console.log('üîÑ Reinitializing FarcasterManager...');
    
    // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    this.isFrameEnvironment = false;
    this.isReady = false;
    this.context = null;
    this.user = null;
    this.sdk = null;
    
    // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    await this.init();
}
–û–±–Ω–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥ init() - –¥–æ–±–∞–≤—å—Ç–µ –≤ –Ω–∞—á–∞–ª–æ:
javascriptasync init() {
    console.log('FarcasterManager: Initializing...');

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ SDK –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤
    if (!window.sdk && window.isMiniApp === undefined) {
        console.log('üîÑ Waiting for SDK to load...');
        let attempts = 0;
        while (!window.sdk && attempts < 100) {
            await new Promise(resolve => setTimeout(resolve, 100));
            attempts++;
        }
    }

    // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ init() –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
    // –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å—Ç–µ:
    this.isReady = true;
    console.log('‚úÖ FarcasterManager initialization complete');
}
–®–∞–≥ 2: –ò—Å–ø—Ä–∞–≤—å—Ç–µ index.html
–ó–∞–º–µ–Ω–∏—Ç–µ —Å–µ–∫—Ü–∏—é window.addEventListener('load'):
javascriptwindow.addEventListener('load', async () => {
    console.log('üéÆ Page loaded, waiting for SDK...');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ SDK
    let attempts = 0;
    const maxAttempts = 200;
    
    while (!window.sdk && attempts < maxAttempts) {
        await new Promise(resolve => setTimeout(resolve, 50));
        attempts++;
    }
    
    if (window.sdk && window.isMiniApp) {
        console.log('‚úÖ SDK ready, creating FarcasterManager...');
        
        // –°–û–ó–î–ê–ï–ú FarcasterManager –¢–û–õ–¨–ö–û –ü–û–°–õ–ï –∑–∞–≥—Ä—É–∑–∫–∏ SDK
        if (typeof FarcasterManager !== 'undefined') {
            window.farcasterManager = new FarcasterManager();
            console.log('‚úÖ FarcasterManager instance created');
        }
        
        // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ FarcasterManager
        let fmAttempts = 0;
        while (!window.farcasterManager?.isReady && fmAttempts < 50) {
            await new Promise(resolve => setTimeout(resolve, 100));
            fmAttempts++;
        }
        
        console.log('üéÆ Initializing Mini App game...');
        const game = new PinballGame();
    } else {
        console.log('üéÆ Initializing regular game...');
        
        // –í –æ–±—ã—á–Ω–æ–π —Å—Ä–µ–¥–µ —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        window.farcasterManager = {
            isFrameEnvironment: false,
            isReady: false,
            sendDonation: () => ({ success: false, reason: 'not_in_miniapp' }),
            shareScore: () => {},
            addToFavorites: () => false
        };
        
        const game = new PinballGame();
    }
});
–®–∞–≥ 3: –ò—Å–ø—Ä–∞–≤—å—Ç–µ ui/GameOverOverlay.js
–û–±–Ω–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥ handleDonate():
javascriptasync handleDonate() {
    if (!window.farcasterManager) {
        console.warn('FarcasterManager not available');
        this.showNotification('Donation not available in this environment', 'error');
        return;
    }
    
    if (!window.farcasterManager.isFrameEnvironment) {
        console.warn('Not in Farcaster Mini App environment');
        this.showNotification('Donations only available in Farcaster app', 'error');
        return;
    }

    // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ handleDonate() –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
}
–û–±–Ω–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥ showFarcasterButtons():
javascriptshowFarcasterButtons() {
    if (window.isMiniApp && window.farcasterManager?.isFrameEnvironment && this.farcasterActions) {
        this.farcasterActions.style.display = 'flex';
        console.log('‚úÖ Farcaster action buttons shown');
    } else {
        console.log('‚ÑπÔ∏è Farcaster buttons hidden - not in Mini App or manager not ready');
    }
}
–®–∞–≥ 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
–í –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
javascript// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
function debugFarcaster() {
    console.log('=== FARCASTER DEBUG ===');
    console.log('window.isMiniApp:', window.isMiniApp);
    console.log('window.sdk:', !!window.sdk);
    console.log('window.farcasterManager:', !!window.farcasterManager);
    
    if (window.farcasterManager) {
        console.log('isFrameEnvironment:', window.farcasterManager.isFrameEnvironment);
        console.log('isReady:', window.farcasterManager.isReady);
        console.log('SDK available:', !!window.farcasterManager.sdk);
    }
}

debugFarcaster();
–†–µ–∑—É–ª—å—Ç–∞—Ç
–ü–æ—Å–ª–µ —ç—Ç–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:

‚úÖ FarcasterManager —Å–æ–∑–¥–∞–µ—Ç—Å—è –ü–û–°–õ–ï –∑–∞–≥—Ä—É–∑–∫–∏ SDK
‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è Mini App —Å—Ä–µ–¥–∞
‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–æ–Ω–∞—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ Farcaster
‚úÖ Graceful fallback –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ

–ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - FarcasterManager —Å–æ–∑–¥–∞–≤–∞–ª—Å—è –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ SDK.