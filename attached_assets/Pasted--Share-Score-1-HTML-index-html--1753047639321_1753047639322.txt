–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ Share Score
1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å HTML (index.html)
–ó–∞–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π game-over-overlay –Ω–∞ —ç—Ç–æ—Ç –∫–æ–¥:

<!-- Game Over Overlay -->
<div class="game-over-overlay" id="gameOverOverlay" style="display: none;">
    <div class="game-over-content">
        <h1>GAME OVER</h1>
        <div class="final-stats">
            <div class="stat">
                <span class="stat-label">final score</span>
                <span class="stat-value" id="finalScore">0</span>
            </div>
            <div class="stat">
                <span class="stat-label">level reached</span>
                <span class="stat-value" id="levelReached">1</span>
            </div>
            <div class="stat">
                <span class="stat-label">high score</span>
                <span class="stat-value" id="finalHighScore">0</span>
            </div>
        </div>
        <div class="game-over-controls">
            <button class="restart-btn" id="restartGame">üîÑ RESTART</button>
            <button class="menu-btn" id="backToMenu">üè† CHANGE ROOM</button>
            <button id="shareScoreBtn" class="restart-btn farcaster-btn" style="display: none;">üì§ Share Score</button>
        </div>
        <div id="farcasterUserInfo" style="display: none;"></div>
    </div>
</div>
2. –î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∏–ª–∏ –¥–ª—è Farcaster –∫–Ω–æ–ø–∫–∏ (style.css)
/* Farcaster –∫–Ω–æ–ø–∫–∞ */
.farcaster-btn {
    background: linear-gradient(135deg, #7C3AED, #5B21B6) !important;
    border: none !important;
    color: white !important;
    margin-top: 10px !important;
}

.farcaster-btn:hover {
    background: linear-gradient(135deg, #5B21B6, #4C1D95) !important;
    transform: translateY(-2px) !important;
    box-shadow: 0 4px 12px rgba(124, 58, 237, 0.4) !important;
}

#farcasterUserInfo {
    margin: 15px 0;
    text-align: center;
    color: #00ff00;
    font-size: 14px;
    background: rgba(0, 0, 0, 0.3);
    padding: 10px;
    border-radius: 8px;
}

#farcasterUserInfo img {
    display: block;
    margin: 0 auto 10px;
    border-radius: 50%;
    border: 2px solid var(--accent-color);
}
3. –û–±–Ω–æ–≤–∏—Ç—å GameOverOverlay.js
class GameOverOverlay {
    constructor() {
        this.overlay = document.getElementById('gameOverOverlay');
        this.scoreElement = document.getElementById('finalScore');
        this.highScoreElement = document.getElementById('finalHighScore');
        this.levelElement = document.getElementById('levelReached');
        this.shareButton = document.getElementById('shareScoreBtn');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if (!this.overlay) {
            console.warn('GameOverOverlay: gameOverOverlay element not found');
        }
    }

    show(gameState) {
        if (!this.overlay) {
            console.error('GameOverOverlay: Cannot show overlay - element not found');
            return;
        }

        this.overlay.style.display = 'flex';
        
        if (this.scoreElement) {
            this.scoreElement.textContent = gameState.score.toLocaleString();
        }
        
        if (this.highScoreElement) {
            this.highScoreElement.textContent = gameState.highScore.toLocaleString();
        }
        
        if (this.levelElement) {
            this.levelElement.textContent = gameState.level || 1;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É Share —Ç–æ–ª—å–∫–æ –≤ Farcaster –æ–∫—Ä—É–∂–µ–Ω–∏–∏
        this.showFarcasterButtons();
    }

    showFarcasterButtons() {
        if (window.isMiniApp && window.sdk && this.shareButton) {
            this.shareButton.style.display = 'block';
            console.log('‚úÖ Farcaster share button shown');
        }
    }

    hide() {
        if (!this.overlay) {
            console.error('GameOverOverlay: Cannot hide overlay - element not found');
            return;
        }
        
        this.overlay.style.display = 'none';
    }
}
4. –û–±–Ω–æ–≤–∏—Ç—å PinballGame.js (–º–µ—Ç–æ–¥ gameOver)
–ù–∞–π—Ç–∏ –º–µ—Ç–æ–¥ gameOver() –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Ç–∞–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è showFarcasterButtons:

gameOver() {
    console.log('üéÆ Game Over! Final Score:', this.gameState.score);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º high score
    if (this.gameState.score > this.gameState.highScore) {
        this.gameState.highScore = this.gameState.score;
        localStorage.setItem('pinball-highscore', this.gameState.highScore);
        console.log('üèÜ New High Score!', this.gameState.highScore);
    }

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä—É
    this.gameState.isRunning = false;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º overlay
    this.gameOverOverlay.show(this.gameState);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Farcaster –∫–Ω–æ–ø–∫–∏ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
    this.showFarcasterButtons();
}
5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
–£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –≤ setupEventListeners() –µ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è shareScoreBtn:

// Farcaster buttons (–≤ –º–µ—Ç–æ–¥–µ setupEventListeners)
const shareBtn = document.getElementById('shareScoreBtn');
if (shareBtn) {
    shareBtn.addEventListener('click', () => {
        this.shareScore();
    });
}
–ò—Ç–æ–≥
–ü–æ—Å–ª–µ —ç—Ç–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π:

‚úÖ –ö–Ω–æ–ø–∫–∞ "üì§ Share Score" –±—É–¥–µ—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ Game Over
‚úÖ –ö–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç –≤–∏–¥–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ Farcaster Mini App –æ–∫—Ä—É–∂–µ–Ω–∏–∏
‚úÖ –ü—Ä–∏ –∫–ª–∏–∫–µ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è shareScore() –º–µ—Ç–æ–¥
‚úÖ –ü–æ—Å—Ç –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –≤ Farcaster —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏–≥—Ä—ã